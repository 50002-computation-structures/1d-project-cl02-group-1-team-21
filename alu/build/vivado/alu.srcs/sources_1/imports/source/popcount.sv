/*
    This file was generated automatically by Alchitry Labs 2.0.29-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module popcount (
        input wire clk,
        input wire rst,
        input wire [31:0] a,
        output reg [5:0] out
    );
    logic [31:0] R_5dea9ae9_i;
    logic [31:0] RR_5dea9ae9_i;
    logic [5:0] D_count_d, D_count_q = 0;
    always @* begin
        D_count_d = D_count_q;
        
        D_count_d = D_count_q;
        out = 1'h0;
        for (RR_5dea9ae9_i = 0; RR_5dea9ae9_i < 6'h20; RR_5dea9ae9_i = RR_5dea9ae9_i + 1) begin
      R_5dea9ae9_i = (0) + RR_5dea9ae9_i * (1);
            if (a[R_5dea9ae9_i] == 1'h1) begin
                D_count_d = D_count_q + 1'h1;
            end
        end
        out = D_count_q;
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_count_q <= 0;
        end else begin
            D_count_q <= D_count_d;
        end
    end
endmodule