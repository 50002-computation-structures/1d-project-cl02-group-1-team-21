/*
    This file was generated automatically by Alchitry Labs 2.0.29-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module x_bit_left_shifter #(
        parameter SHIFT = 4'h8
    ) (
        input wire [31:0] a,
        input wire shift,
        input wire pad,
        output reg [31:0] out
    );
    logic [31:0] R_65ae28cf_i;
    logic [31:0] RR_65ae28cf_i;
    logic [31:0] R_42996163_i;
    logic [31:0] RR_42996163_i;
    logic [31:0] M_mux_2_s0;
    logic [31:0][1:0] M_mux_2_in;
    logic [31:0] M_mux_2_out;
    
    genvar idx_0_555875172;
    
    generate
        for (idx_0_555875172 = 0; idx_0_555875172 < 32; idx_0_555875172 = idx_0_555875172 + 1) begin: forLoop_idx_0_555875172
            mux_2 mux_2 (
                .s0(M_mux_2_s0[idx_0_555875172]),
                .in(M_mux_2_in[idx_0_555875172]),
                .out(M_mux_2_out[idx_0_555875172])
            );
        end
    endgenerate
    
    
    always @* begin
        for (RR_65ae28cf_i = 0; RR_65ae28cf_i < 6'h20 - SHIFT; RR_65ae28cf_i = RR_65ae28cf_i + 1) begin
      R_65ae28cf_i = (SHIFT) + RR_65ae28cf_i * (1);
            M_mux_2_in[R_65ae28cf_i][1'h0] = a[R_65ae28cf_i];
            M_mux_2_in[R_65ae28cf_i][1'h1] = a[R_65ae28cf_i - SHIFT];
            M_mux_2_s0[R_65ae28cf_i] = shift;
        end
        for (RR_42996163_i = 0; RR_42996163_i < SHIFT; RR_42996163_i = RR_42996163_i + 1) begin
      R_42996163_i = (0) + RR_42996163_i * (1);
            M_mux_2_in[R_42996163_i][1'h0] = a[R_42996163_i];
            M_mux_2_in[R_42996163_i][1'h1] = pad;
            M_mux_2_s0[R_42996163_i] = shift;
        end
        out = M_mux_2_out;
    end
    
    
endmodule